题目描述如下：

二进制手表顶部有 4 个 LED 代表小时（0-11），底部的 6 个 LED 代表分钟（0-59）。

每个 LED 代表一个 0 或 1，最低位在右侧。

例如，上面的二进制手表读取 “3:25”。

给定一个非负整数 n 代表当前 LED 亮着的数量，返回所有可能的时间。

输入: n = 1
返回: ["1:00", "2:00", "4:00", "8:00", "0:01", "0:02", "0:04", "0:08", "0:16", "0:32"]
 
注意事项:

输出的顺序没有要求。
小时不会以零开头，比如 “01:00” 是不允许的，应为 “1:00”。
分钟必须由两位数组成，可能会以零开头，比如 “10:2” 是无效的，应为 “10:02”。

以下是我的代码：
private static int lighttotal=0;
private static int light[]=new int[11];
private static List<String> l=new ArrayList();
public static void main(String args[])
	{
		int num=1;
		List<String> l=readBinaryWatch(num);
		for(int n=0;n<l.size();n++)
			System.out.println(l.get(n)+" ");
		System.out.println(l.indexOf("0.00")+" ");
	}
	public static List<String> readBinaryWatch(int num) {
		re(num);
		HashSet h = new HashSet(l);
		l.clear();
		l.addAll(h);
		return l;
    }
	public static void re(int num)
	{
		if(lighttotal==num)
        {
        	result(light);
        }
        else
        {
        	for(int up=1;up<=10;up++)
        	{
        		if(light[up]==0)
        		{
        			light[up]=1;
        			lighttotal+=1;
        			for(int n=0;n<light.length;n++)
        			{
        				System.out.print(light[n]+" ");
        			}
        			re(num);
        			light[up]=0;
        			lighttotal-=1;
        		}
        	}
        }
	}
	public static void result(int[] light)
	{
		String time;
		int hour=0;
		int minute=0;
		for(int n=1;n<=10;n++)
		{
			if(n<=6&&light[n]==1)
				minute=minute+(int)Math.pow(2, n-1);
			else
				if(n>6&&light[n]==1)
				hour=hour+(int)Math.pow(2, n-7);
		}
		if(hour==0)
			time="0:";
		else
			time=String.valueOf(hour)+":";
		if(minute<10)
			time=time+"0"+String.valueOf(minute);
		else
			time=time+String.valueOf(minute);
		System.out.println("结果："+time+" hour:"+hour+" minute:"+minute);
		l.add(time);
	}
